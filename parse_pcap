#!/usr/bin/env python
#############################
# Function:
# get a tcpdump packet parsed, and output the http header "Host" in the packet
# Date: Fri Oct 14 00:48:31 GMT+7 2016
#
# Prerequisite:
# dpkt module # sudo pip install dpkt
#
#############################
import dpkt
import re
import sys
def get_host(inputfile):
	with open(inputfile) as f:
		pcap = dpkt.pcap.Reader(f)
		for ts,buf in pcap:
			eth = dpkt.ethernet.Ethernet(buf)
			# Make sure the Ethernet data contains an IP packet
			if not isinstance(eth.data, dpkt.ip.IP):
				print 'Non IP Packet type not supported %s\n' % eth.data.__class__.__name__
				continue

			ip = eth.data
			# Check for TCP in the transport layer
			if isinstance(ip.data, dpkt.tcp.TCP):
				tcp = ip.data
			else:
				print "This packet doesn't have TCP, continue..."
				continue
			#if tcp.dport == 80 and len(tcp.data) > 0:
			if len(tcp.data) > 0:
				tcp_data = tcp.data.split('\r\n')
				for item in tcp_data:
					if 'Host:' in item:
						print item.split()[1]
		   		#http = dpkt.http.Request(tcp.data)
		   		#print http.headers['host']
				#host = http.headers['host']
				#return host

if __name__ == '__main__':
	from optparse import OptionParser
	parser = OptionParser()
	parser.add_option("-f","--file",dest="filename",default="nofile",help="FILENAME for parser",metavar="FILENAME")

	(options,args) = parser.parse_args()
	#print "option: %s,args: %s" % (options,args)
	get_host(options.filename)
	#sys.exit(not get_host)
